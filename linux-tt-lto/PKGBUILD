# Maintainer: AntMan666 <945360554@qq.com>
# Contributor: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
# Contributor: graysky <graysky AT archlinux DOT us>

### BUILD OPTIONS
# Set the next two variables to ANYTHING that is not null to enable them

# Tweak kernel options prior to a build via nconfig
_makenconfig=

# Only compile select modules to reduce the number of modules built
#
# To keep track of which modules are needed for your specific system/hardware,
# give module_db a try: https://aur.archlinux.org/packages/modprobed-db
# This PKGBUILD reads the database kept if it exists
# More at this wiki page ---> https://wiki.archlinux.org/index.php/Modprobed-db
_localmodcfg=

## Choose between GCC and CLANG config (default is GCC)
if [ -z ${_compiler+x} ]; then
  _compiler=clang
fi

#  417 Hz is the TT alternative to 300 Hz. Choose 417 Hz
# if you prefer performance over latency.
_417_HZ_ticks=

# 833 Hz is the TT alternative to 1000 Hz. Choose 833 Hz
#  if you want a balance between latency and performance.
_833_HZ_ticks=

# ck recommends 1000 Hz tick and the hrtimer patches in lieu of ck1
_1000_HZ_ticks=y
 
# 1666 Hz is for very high latency bound systems. Choose 1666 Hz
# if you don't care about overall throughput or performance, but
# you care more about latency (some realtime applications) require
# low latency. The response and interactive processes with 1666 Hz
# feel much snappier.
_1666_HZ_ticks=

# Optionally select a sub architecture by number or leave blank which will
# require user interaction during the build. Note that the generic (default)
# option is 36.
#
#  1. AMD Opteron/Athlon64/Hammer/K8 (MK8)
#  2. AMD Opteron/Athlon64/Hammer/K8 with SSE3 (MK8SSE3) (NEW)
#  3. AMD 61xx/7x50/PhenomX3/X4/II/K10 (MK10) (NEW)
#  4. AMD Barcelona (MBARCELONA) (NEW)
#  5. AMD Bobcat (MBOBCAT) (NEW)
#  6. AMD Jaguar (MJAGUAR) (NEW)
#  7. AMD Bulldozer (MBULLDOZER) (NEW)
#  8. AMD Piledriver (MPILEDRIVER) (NEW)
#  9. AMD Steamroller (MSTEAMROLLER) (NEW)
#  10. AMD Excavator (MEXCAVATOR) (NEW)
#  11. AMD Zen (MZEN) (NEW)
#  12. AMD Zen 2 (MZEN2) (NEW)
#  13. AMD Zen 3 (MZEN3) (NEW)
#  14. Intel P4 / older Netburst based Xeon (MPSC)
#  15. Intel Core 2 (MCORE2)
#  16. Intel Atom (MATOM)
#  17. Intel Nehalem (MNEHALEM) (NEW)
#  18. Intel Westmere (MWESTMERE) (NEW)
#  19. Intel Silvermont (MSILVERMONT) (NEW)
#  20. Intel Goldmont (MGOLDMONT) (NEW)
#  21. Intel Goldmont Plus (MGOLDMONTPLUS) (NEW)
#  22. Intel Sandy Bridge (MSANDYBRIDGE) (NEW)
#  23. Intel Ivy Bridge (MIVYBRIDGE) (NEW)
#  24. Intel Haswell (MHASWELL) (NEW)
#  25. Intel Broadwell (MBROADWELL) (NEW)
#  26. Intel Skylake (MSKYLAKE) (NEW)
#  27. Intel Skylake X (MSKYLAKEX) (NEW)
#  28. Intel Cannon Lake (MCANNONLAKE) (NEW)
#  29. Intel Ice Lake (MICELAKE) (NEW)
#  30. Intel Cascade Lake (MCASCADELAKE) (NEW)
#  31. Intel Cooper Lake (MCOOPERLAKE) (NEW)
#  32. Intel Tiger Lake (MTIGERLAKE) (NEW)
#  33. Intel Sapphire Rapids (MSAPPHIRERAPIDS) (NEW)
#  34. Intel Rocket Lake (MROCKETLAKE) (NEW)
#  35. Intel Alder Lake (MALDERLAKE) (NEW)
#  36. Generic-x86-64 (GENERIC_CPU)
#  37. Generic-x86-64-v2 (GENERIC_CPU2) (NEW)
#  38. Generic-x86-64-v3 (GENERIC_CPU3) (NEW)
#  39. Generic-x86-64-v4 (GENERIC_CPU4) (NEW)
#  40. Intel-Native optimizations autodetected by GCC (MNATIVE_INTEL) (NEW)
#  41. AMD-Native optimizations autodetected by GCC (MNATIVE_AMD) (NEW)
_subarch=15

### IMPORTANT: Do no edit below this line unless you know what you're doing
pkgbase=linux-tt-lto
pkgver=5.19.12
pkgrel=1
pkgdesc='Linux TT scheduler Kernel with other patches and improvements'
replaces=("linux-tt-uksm")
arch=(x86_64)
url="https://github.com/hamadmarri/TT-CPU-Scheduler"
license=(GPL2)
makedepends=(
  bc kmod libelf cpio perl tar xz
)
if [ "${_compiler}" = "clang" ]; then
  makedepends+=(clang llvm lld python)
  BUILD_FLAGS=(
    CC=clang
    LD=ld.lld
    LLVM=1
    LLVM_IAS=1
  )
fi
options=('!strip')

# https://ck-hack.blogspot.com/2021/08/514-and-future-of-muqss-and-ck-once.html
# acknowledgment to xanmod for initially keeping the hrtimer patches up to date
# _ckhrtimer=linux-5.17.y
# _commit=5d3a0424bdbfdf2fc4cca389bf0f1ee4876e782d

_gcc_more_v=20220315
_patchsource="https://raw.githubusercontent.com/CachyOS/kernel-patches/master/5.19"
_patchsources="https://raw.githubusercontent.com/sirlucjan/kernel-patches/master/5.19"

source=(
  "https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-$pkgver.tar".{xz,sign}
  config         # the main kernel config file
  "more-uarches-$_gcc_more_v.tar.gz::https://github.com/graysky2/kernel_compiler_patch/archive/$_gcc_more_v.tar.gz"
  # "ck-hrtimer-$_commit.tar.gz::https://github.com/graysky2/linux-patches/archive/$_commit.tar.gz"
  "${_patchsources}/bbr2-patches/0001-tcp_bbr2-introduce-BBRv2.patch"
  "${_patchsources}/bitmap-patches-v2/0001-bitmap-5.19-merge-changes-from-dev-tree.patch"
  "${_patchsources}/fixes-miscellaneous-v24/0001-fixes-miscellaneous.patch"
  "${_patchsources}/folio-patches-v2/0001-folio-5.19-merge-changes-from-dev-tree.patch"
  "${_patchsources}/futex-patches/0001-futex-5.19-Add-entry-point-for-FUTEX_WAIT_MULTIPLE-o.patch"
  "${_patchsources}/ksm-patches-v5/0001-ksm-patches.patch"
  "${_patchsources}/lrng-patches-v4/0001-lrng-patches.patch"
  "${_patchsources}/lru-cachyos-patches-v4/0001-lru-cachyos-patches.patch"
  "${_patchsources}/makefile-patches/0001-arch-x86-improve-KBUILD_CFLAG.patch"
  "${_patchsources}/vma-patches/0001-vma-5.19-per-VMA-locks-proposal.patch"
  "${_patchsource}/misc/0001-ck-hrtimer.patch"
  "${_patchsource}/0006-fs-patches.patch"
  # "${_patchsource}/sched/0001-tt.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0001-XANMOD-fair-Remove-all-energy-efficiency-functions.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0002-XANMOD-Change-rcutree.kthread_prio-to-SCHED_RR-polic.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0003-XANMOD-block-mq-deadline-Disable-front_merges-by-def.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0004-XANMOD-block-mq-deadline-Increase-write-priority-to-.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0005-XANMOD-block-set-rq_affinity-to-force-full-multithre.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0007-XANMOD-dcache-cache_pressure-50-decreases-the-rate-a.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0008-XANMOD-sched-autogroup-Add-kernel-parameter-and-conf.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0011-XANMOD-scripts-setlocalversion-remove-tag-for-git-re.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0012-XANMOD-lib-kconfig.debug-disable-default-CONFIG_SYMB.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0013-XANMOD-init-Kconfig-Enable-O3-KBUILD_CFLAGS-optimiza.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-5.19.y-xanmod/xanmod/0014-XANMOD-Makefile-Turn-off-loop-vectorization-for-GCC-.patch"
)

validpgpkeys=(
  'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
  '647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
)

b2sums=('2f42b30510e8b778e78d5945b8cf0d5f67e95470414043128470108251a10a5a67841f5f508253a3bd93ebc4203a93e9947dcf7f4aabbe37e09390e7b25b52b0'
        'SKIP'
        '430669f1a3faebb5461c8088b7045677a309a4c425a805691af5c618d83e8ac0fc98fb74fca3c78417e1c271ee4ba273295935f224901aa97dc81c31bc28b1b4'
        '20674a8fcc0a85726e06460a7dbccfe731c46bf377cc3bf511b7591175e7df892f271bc1909e77d9a02913c753d241493502c5ab15d9f78e95f31aa4399c2c27'
        '996fd4ff6ece3a2b453769fa44dfd0b5930dfe30fbdf5ef571336088985101d6332e73d65b0ca16a85050a879a797448cfc7b31a34bb817f84ab120c20d16370'
        'be71f4fa5aa1be9ee842d728fbc05a13a74d58e09f139f5045594bd052e23c606095968303f371e9243a00fd4ac8f32ae30a177a54e6e283aa9335bb019df051'
        '425d84c8bd9224b56a82e88044d15ff9de16fa3c5b568be7cd071262412a9b62895a5eafd4e006db9f5453b53f3340bc0ddd7ad0450fedf3c335fdc7a56d1aeb'
        'aec2096240922fed6ee4c2d6147de8fb0cc54bba959aadd7700488e8863ea75492849310024a2e6cb8bfc1dde7b936364aa25848f4e77833ed71ee27c0888aeb'
        '85b2b783cc8d728a0eccd1df025fdc4927eca1397ae81900958d891d632dec78f6b804e5306592eb190f21e9de67c347a7ed4a65c56dd3f0d437cbc5e2f74bc0'
        '5a12625fe2e26d70c7816cd8b109178b12394549765c74d430ddc0cf446c29983c36854bf674e7b20f67de371a50f2b578f079e7a9525e7a1727c2d183ccbfbc'
        '351deddd2f4ae90fb89fdb12777b15e0a1858a8670ba362bb4caf9c02eb5f3a65fbcbd8a3848b0e58febb72be40dd8c96299885fee9262aed31e8580fb91cfa6'
        '605cad98948545889ab6841ff6dec0bdeaba2ebfedfabfc71732e377cabbbdca392b80e180b0f465040087e1284324efae08185f24bdd143a2088976a94e45e0'
        'cf2431f5134f3c684541be17588b4bc08d4b63ab9491b60cb35dc630c4b9f5bbc90e8d26b86269926dcd9aa3c78a769cbe880615d0451a415646015c092bb959'
        '70d39b55d7717e24740c677b78473c4176d1d8437199d1abceea3d417a53d387b3172bda0adfa291a87c9946b56e7de73147c83c8eba355f3b8bdddbd2832e82'
        'e3513f71dd7b254fc8e2a26986bb672fb356f34c4b52a04df4f105859c59caa8447b03266997f9ab478522878ee72fe05a8202a9e6fb6a0259da01918dce4b53'
        '179d3f6cd83b8f7d26d24ba8e81a9b735c9bc9c84c92793d5869d1dc9b1b862893529fecdc4e454d80b82d6841cbe5cde18ccd76525b2284da97d53b8e042ff0'
        'a2b7aa1be3488c2a29a3d579af4c450fe4a093c23584c8611bc5c3e31569bbf5a2e74d4c804cfe97ff1ef62ad5973d1da4291c6ff15f90449edf743e48368cfe'
        'ab0535cb1e60775fa95d4ec705be785fc0551d083234794a7b7984c4c3a04e209d33758d176d089da22dffe6bd8c9079d7977a849e8cd71115b45fc3aabb289f'
        '2e50b252dc579dd576bf80004fc785510596cf0fe36c46bc5578cefae9866a4558f7111c83c9e265ce24fa7e4829dd253f1734344dd944ac5f681eb2a47eefdb'
        'c40d0bf09d45373b883580bf98e3f18f8a068990b64751cc7ccfc7474f0f1f6d6131d8ec4cd775b8d987e49d9439777b701116fd1c7a0a371b5074c217c43d7c'
        'b0cf8b5335065b0f0031f7ed0176a866b64ba807b905fbd6375c1dc888f1a4d704d00b328aa04d1a5b53f38aecd260292bdef04cbac33df3841455e4955e5229'
        '3a4feceac299140a8e8809e6d6b125d22b08ea482094122239bf38ad54a0bfc7c0e2e382aa547bafb3d19bc53971684054750c4481b9592ddf8c699d8f820207'
        '3185319171ba59b8ddf93fa827e067b8f6907c000c7d1fd24cad4566ed0158b41277d0ff05aac9a70d4422750ea7dd33d36939917e6b69c5454f788aa76b47b7'
        '45d6f93d744c24537f6f10dc0fcdc512e666838d6bbdeed11f123efc5065cdc8b8d861da40065b26598c2b585bf069e317832032277be8ed8ce8eb97e1cda6ce'
        '6ddf293bc5a150b8b79d44e242b7d17fd8df34d80b4f14ed6f3c955c421f2a9dc0aaa70761ee753160d55e7e20ac1c45554fa111343426c1b6a5f06f7d42cd90')

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

prepare() {
  cd linux-${pkgver}

  msg2 "Setting version..."
  scripts/setlocalversion --save-scmversion
  echo "-$pkgrel" > localversion.10-pkgrel
  echo "${pkgbase#linux}" > localversion.20-pkgname

  sed -i '/select DEBUG_KERNEL/d' init/Kconfig
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    msg2 "Applying patch $src..."
    patch -Np1 < "../$src"
  done

  msg2 "Setting config..."
  cp ../config .config

  # clang Full LTO
  if [ "${_compiler}" = "clang" ]; then
    msg2 "Enable FULL LTO"
    scripts/config \
            --enable LTO \
            --enable LTO_CLANG \
            --enable ARCH_SUPPORTS_LTO_CLANG \
            --enable ARCH_SUPPORTS_LTO_CLANG_THIN \
            --disable LTO_NONE \
            --enable HAS_LTO_CLANG \
            --enable LTO_CLANG_FULL \
            --disable LTO_CLANG_THIN
  fi

  scripts/config --enable CONFIG_CGROUPS
  scripts/config --enable CONFIG_RT_GROUP_SCHED

  # disable CONFIG_DEBUG_INFO=y at build time otherwise memory usage blows up
  # and can easily overwhelm a system with 32 GB of memory using a tmpfs build
  # partition ... this was introduced by FS#66260, see:
  # https://git.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/linux&id=663b08666b269eeeeaafbafaee07fd03389ac8d7
  scripts/config --disable CONFIG_DEBUG_INFO
  scripts/config --disable CONFIG_DEBUG_KERNEL
  scripts/config --disable CONFIG_CGROUP_BPF
  scripts/config --disable CONFIG_BPF_LSM
  scripts/config --disable CONFIG_BPF_PRELOAD
  scripts/config --disable CONFIG_BPF_LIRC_MODE2
  scripts/config --disable CONFIG_BPF_KPROBE_OVERRIDE

  # https://bbs.archlinux.org/viewtopic.php?pid=1824594#p1824594
  scripts/config --enable CONFIG_PSI_DEFAULT_DISABLED

  # https://bbs.archlinux.org/viewtopic.php?pid=1863567#p1863567
  scripts/config --disable CONFIG_LATENCYTOP
  scripts/config --disable CONFIG_SCHED_DEBUG

  # FS#66613
  # https://bugzilla.kernel.org/show_bug.cgi?id=207173#c6
  scripts/config --disable CONFIG_KVM_WERROR
  scripts/config --enable CONFIG_KVM
  scripts/config --enable CONFIG_KVM_INTEL
  scripts/config --disable CONFIG_KVM_AMD

 
  msg2 "Enable O3"
  scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_SIZE
  scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3 

  msg2 "Enabling Linux Random Number Generator ..."
  scripts/config --disable CONFIG_RANDOM_DEFAULT_IMPL
  scripts/config --enable CONFIG_LRNG
  scripts/config --enable CONFIG_LRNG_SHA256
  scripts/config --enable CONFIG_LRNG_COMMON_DEV_IF
  scripts/config --enable CONFIG_LRNG_DRNG_ATOMIC
  scripts/config --enable CONFIG_LRNG_SYSCTL
  scripts/config --enable CONFIG_LRNG_RANDOM_IF
  scripts/config --module CONFIG_LRNG_KCAPI_IF
  scripts/config --module CONFIG_LRNG_HWRAND_IF
  scripts/config --enable CONFIG_LRNG_DEV_IF
  scripts/config --enable CONFIG_LRNG_RUNTIME_ES_CONFIG
  scripts/config --enable CONFIG_LRNG_IRQ_DFLT_TIMER_ES
  scripts/config --disable CONFIG_LRNG_SCHED_DFLT_TIMER_ES
  scripts/config --enable CONFIG_LRNG_TIMER_COMMON
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_256
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_512
  scripts/config --enable CONFIG_LRNG_COLLECTION_SIZE_1024
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_2048
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_4096
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_8192
  scripts/config --set-val CONFIG_LRNG_COLLECTION_SIZE 1024
  scripts/config --enable CONFIG_LRNG_HEALTH_TESTS
  scripts/config --set-val CONFIG_LRNG_RCT_CUTOFF 31
  scripts/config --set-val CONFIG_LRNG_APT_CUTOFF 325
  scripts/config --enable CONFIG_LRNG_IRQ
  scripts/config --enable CONFIG_LRNG_CONTINUOUS_COMPRESSION_ENABLED
  scripts/config --disable CONFIG_LRNG_CONTINUOUS_COMPRESSION_DISABLED
  scripts/config --enable CONFIG_LRNG_ENABLE_CONTINUOUS_COMPRESSION
  scripts/config --enable CONFIG_LRNG_SWITCHABLE_CONTINUOUS_COMPRESSION
  scripts/config --set-val CONFIG_LRNG_IRQ_ENTROPY_RATE 256
  scripts/config --enable CONFIG_LRNG_JENT
  scripts/config --set-val CONFIG_LRNG_JENT_ENTROPY_RATE 16
  scripts/config --enable CONFIG_LRNG_CPU
  scripts/config --set-val CONFIG_LRNG_CPU_FULL_ENT_MULTIPLIER 1
  scripts/config --set-val CONFIG_LRNG_CPU_ENTROPY_RATE 8
  scripts/config --enable CONFIG_LRNG_SCHED
  scripts/config --set-val CONFIG_LRNG_SCHED_ENTROPY_RATE 4294967295
  scripts/config --enable CONFIG_LRNG_DRNG_CHACHA20
  scripts/config --module CONFIG_LRNG_DRBG
  scripts/config --module CONFIG_LRNG_DRNG_KCAPI
  scripts/config --enable CONFIG_LRNG_SWITCH
  scripts/config --enable CONFIG_LRNG_SWITCH_HASH
  scripts/config --module CONFIG_LRNG_HASH_KCAPI
  scripts/config --enable CONFIG_LRNG_SWITCH_DRNG
  scripts/config --module CONFIG_LRNG_SWITCH_DRBG
  scripts/config --module CONFIG_LRNG_SWITCH_DRNG_KCAPI
  scripts/config --enable CONFIG_LRNG_DFLT_DRNG_CHACHA20
  scripts/config --disable CONFIG_LRNG_DFLT_DRNG_DRBG
  scripts/config --disable CONFIG_LRNG_DFLT_DRNG_KCAPI
  scripts/config --enable CONFIG_LRNG_TESTING_MENU
  scripts/config --disable CONFIG_LRNG_RAW_HIRES_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_JIFFIES_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_IRQ_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_RETIP_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_REGS_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_ARRAY
  scripts/config --disable CONFIG_LRNG_IRQ_PERF
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_HIRES_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_PID_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_START_TIME_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_NVCSW_ENTROPY
  scripts/config --disable CONFIG_LRNG_SCHED_PERF
  scripts/config --disable CONFIG_LRNG_ACVT_HASH
  scripts/config --disable CONFIG_LRNG_RUNTIME_MAX_WO_RESEED_CONFIG
  scripts/config --disable CONFIG_LRNG_TEST_CPU_ES_COMPRESSION
  scripts/config --enable CONFIG_LRNG_SELFTEST
  scripts/config --disable CONFIG_LRNG_SELFTEST_PANIC

  msg2 "Selecting TT Scheduler..."
  scripts/config --enable TT_SCHED
  scripts/config --disable TT_ACCOUNTING_STATS

  ### Optionally set tickrate 
  if [ -n "$_417_HZ_ticks" ]; then
    msg2 "Setting tick rate to 417Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_417
    scripts/config --set-val CONFIG_HZ 417
  fi 
  
  if [ -n "$_833_HZ_ticks" ]; then
    msg2 "Setting tick rate to 833Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_833
    scripts/config --set-val CONFIG_HZ 833
  fi

  if [ -n "$_1000_HZ_ticks" ]; then
    msg2 "Setting tick rate to 1000Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_1000
    scripts/config --set-val CONFIG_HZ 1000
  fi

  if [ -n "$_1666_HZ_ticks" ]; then
    msg2 "Setting tick rate to 1666Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_1666
    scripts/config --set-val CONFIG_HZ 1666
  fi

  # BBR2
  msg2 "Enable BBR2"
  scripts/config --module TCP_CONG_CUBIC \
                 --disable DEFAULT_CUBIC \
                 --enable TCP_CONG_BBR2 \
                 --enable DEFAULT_BBR2 \
                 --set-str DEFAULT_TCP_CONG bbr2
  
  msg2 "Disabling NUMA"
  scripts/config --disable NUMA \
                 --disable AMD_NUMA \
                 --disable X86_64_ACPI_NUMA \
                 --disable NODES_SPAN_OTHER_NODES \
                 --disable NUMA_EMU \
                 --disable NEED_MULTIPLE_NODES \
                 --disable USE_PERCPU_NUMA_NODE_ID \
                 --disable ACPI_NUMA \
                 --disable ARCH_SUPPORTS_NUMA_BALANCING \
                 --disable NODES_SHIFT \
                 --undefine NODES_SHIFT \
                 --disable NEED_MULTIPLE_NODES

  msg2 "Enable zswap compression to LZ4"
  scripts/config --enable CONFIG_ZSMALLOC
  scripts/config --disable CONFIG_ZRAM
  scripts/config --enable CONFIG_ZSWAP
  scripts/config --enable CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZ4
  scripts/config --enable CONFIG_ZSWAP_ZPOOL_DEFAULT_ZSMALLOC
  scripts/config --set-str CONFIG_ZSWAP_ZPOOL_DEFAULT zsmalloc
  scripts/config --set-str CONFIG_ZSWAP_COMPRESSOR_DEFAULT lz4
  scripts/config --disable CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZO
  scripts/config --disable CONFIG_ZSWAP_ZPOOL_DEFAULT_ZBUD
  scripts/config --enable CONFIG_ZSWAP_DEFAULT_ON

  msg2 "Setting performance governor..."
  scripts/config --enable CONFIG_CPU_FREQ_GOV_ONDEMAND
  scripts/config --enable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
  scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE

  msg2 "Enabling tickless idle"
  scripts/config --disable HZ_PERIODIC \
                 --disable NO_HZ_IDLE \
                 --disable CONTEXT_TRACKING_FORCE \
                 --enable NO_HZ_FULL_NODEF \
                 --enable NO_HZ_FULL \
                 --enable NO_HZ \
                 --enable NO_HZ_COMMON \
                 --enable CONTEXT_TRACKING

  msg2 "Enabling low latency preempt..."
  scripts/config --enable PREEMPT_BUILD \
                 --disable PREEMPT_NONE \
                 --disable PREEMPT_VOLUNTARY \
                 --enable PREEMPT \
                 --enable PREEMPT_COUNT \
                 --enable PREEMPTION \
                 --enable PREEMPT_DYNAMIC
    
  msg2 "Enabling multigenerational LRU..."
  scripts/config --enable ARCH_HAS_NONLEAF_PMD_YOUNG \
                 --enable LRU_GEN \
                 --enable LRU_GEN_ENABLED \
                 --disable LRU_GEN_STATS \
                 --set-val NR_LRU_GENS 7 \
                 --set-val TIERS_PER_GEN 4

  msg2 "Enabling DAMON"
  scripts/config --enable DAMON \
                 --disable DAMON_VADDR \
                 --disable DAMON_DBGFS \
                 --enable DAMON_SYSFS \
                 --enable DAMON_PADDR \
                 --enable DAMON_RECLAIM

  msg2 "disable debugging features to reduce the size..."
  scripts/config --disable DEBUG_INFO \
                 --disable DEBUG_INFO_BTF \
                 --disable DEBUG_INFO_DWARF4 \
                 --disable DEBUG_INFO_DWARF5 \
                 --disable PAHOLE_HAS_SPLIT_BTF \
                 --disable DEBUG_INFO_BTF_MODULES \
                 --disable SLUB_DEBUG \
                 --disable PM_DEBUG \
                 --disable PM_ADVANCED_DEBUG \
                 --disable PM_SLEEP_DEBUG \
                 --disable ACPI_DEBUG \
                 --disable SCHED_DEBUG \
                 --disable LATENCYTOP \
                 --disable DEBUG_PREEMPT

  # msg2 "Enable ZRAM_ENTROPY"
  # scripts/config --enable ZRAM_ENTROPY \
  #                --set-val ZRAM_ENTROPY_THRESHOLD 100000

  # these are ck's htrimer patches
  # msg2 "Patching with ck hrtimer patches..."

  # for i in ../linux-patches-"$_commit"/"$_ckhrtimer"/ck-hrtimer/0*.patch; do
  #   patch -Np1 -i $i
  # done

  # non-interactively apply ck1 default options
  # this isn't redundant if we want a clean selection of subarch below
  make ${BUILD_FLAGS[*]} olddefconfig
  diff -u ../config .config || :

  # https://github.com/graysky2/kernel_gcc_patch
  # make sure to apply after olddefconfig to allow the next section
  msg2 "Patching to enable GCC optimization for other uarchs..."
  patch -Np1 -i "$srcdir/kernel_compiler_patch-$_gcc_more_v/more-uarches-for-kernel-5.17+.patch"

  if [ -n "$_subarch" ]; then
    # user wants a subarch so apply choice defined above interactively via 'yes'
    yes "$_subarch" | make ${BUILD_FLAGS[*]} oldconfig
  else
    # no subarch defined so allow user to pick one
    make ${BUILD_FLAGS[*]} oldconfig
  fi

  ### Optionally load needed modules for the make localmodconfig
  # See https://aur.archlinux.org/packages/modprobed-db
  if [ -n "$_localmodcfg" ]; then
    if [ -f $HOME/.config/modprobed.db ]; then
      msg2 "Running Steven Rostedt's make localmodconfig now"
      make ${BUILD_FLAGS[*]} LSMOD=$HOME/.config/modprobed.db localmodconfig
    else
      msg2 "No modprobed.db data found"
      exit
    fi
  fi

  make ${BUILD_FLAGS[*]} -s kernelrelease > version
  echo "Prepared $pkgbase version $(<version)"

  [[ -z "$_makenconfig" ]] || make ${BUILD_FLAGS[*]} nconfig

  # save configuration for later reuse
  cat .config > "${startdir}/config.last"
}

build() {
  cd linux-${pkgver}
  make ${BUILD_FLAGS[*]} all
}

_package() {
  pkgdesc="The ${pkgbase/linux/Linux} kernel and modules with Con Kolivas' hrtimer patches and TT CPU scheduler by Hamad Al Marri and with some other patches"
  depends=(coreutils kmod initramfs)
  optdepends=('crda: to set the correct wireless channels of your country'
              'linux-firmware: firmware images needed for some devices')
  provides=(kvm winesync)
  # groups=('tt-uksm')

  cd linux-${pkgver}

  local kernver="$(<version)"
  local modulesdir="$pkgdir/usr/lib/modules/$kernver"

  echo "Installing boot image..."
  # systemd expects to find the kernel here to allow hibernation
  # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
  #install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"
  #
  # hard-coded path in case user defined CC=xxx for build which causes errors
  # see this FS https://bugs.archlinux.org/task/64315
  install -Dm644 arch/x86/boot/bzImage "$modulesdir/vmlinuz"

  # Used by mkinitcpio to name the kernel
  echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

  echo "Installing modules..."
  #make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 modules_install
  # not needed since not building with CONFIG_DEBUG_INFO=y

  make LLVM=$_LLVM LLVM_IAS=$_LLVM INSTALL_MOD_PATH="$pkgdir/usr" modules_install

  # remove build and source links
  rm "$modulesdir"/{source,build}
}

_package-headers() {
  pkgdesc="Headers and scripts for building modules for ${pkgbase/linux/Linux} kernel"
  depends=("$pkgbase") # added to keep kernel and headers packages matched
  # groups=('tt-uksm')

  cd linux-${pkgver}
  local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

  echo "Installing build files..."
  install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
    localversion.* version vmlinux
  install -Dt "$builddir/kernel" -m644 kernel/Makefile
  install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
  cp -t "$builddir" -a scripts

  # add objtool for external module building and enabled VALIDATION_STACK option
  install -Dt "$builddir/tools/objtool" tools/objtool/objtool

  # add xfs and shmem for aufs building
  mkdir -p "$builddir"/{fs/xfs,mm}

  echo "Installing headers..."
  cp -t "$builddir" -a include
  cp -t "$builddir/arch/x86" -a arch/x86/include
  install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

  install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
  install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

  # https://bugs.archlinux.org/task/13146
  install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # https://bugs.archlinux.org/task/20402
  install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  # https://bugs.archlinux.org/task/71392
  install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

  echo "Installing KConfig files..."
  find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

  echo "Removing unneeded architectures..."
  local arch
  for arch in "$builddir"/arch/*/; do
    [[ $arch = */x86/ ]] && continue
    echo "Removing $(basename "$arch")"
    rm -r "$arch"
  done

  echo "Removing documentation..."
  rm -r "$builddir/Documentation"

  echo "Removing broken symlinks..."
  find -L "$builddir" -type l -printf 'Removing %P\n' -delete

  echo "Removing loose objects..."
  find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

  echo "Stripping build tools..."
  local file
  while read -rd '' file; do
    case "$(file -bi "$file")" in
      application/x-sharedlib\;*)      # Libraries (.so)
        strip -v $STRIP_SHARED "$file" ;;
      application/x-archive\;*)        # Libraries (.a)
        strip -v $STRIP_STATIC "$file" ;;
      application/x-executable\;*)     # Binaries
        strip -v $STRIP_BINARIES "$file" ;;
      application/x-pie-executable\;*) # Relocatable binaries
        strip -v $STRIP_SHARED "$file" ;;
    esac
  done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

  #echo "Stripping vmlinux..."
  #strip -v $STRIP_STATIC "$builddir/vmlinux"
  # not needed since not building with CONFIG_DEBUG_INFO=y

  echo "Adding symlink..."
  mkdir -p "$pkgdir/usr/src"
  ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"

}

pkgname=("$pkgbase" "$pkgbase-headers")
for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done

# vim:set ts=8 sts=2 sw=2 et:
