# Maintainer: AntMan666 <945360554@qq.com>
# Contributor: Jan Alexander Steffens (heftig) <jan.steffens@gmail.com>
# Contributor: graysky <graysky AT archlinux DOT us>

### BUILD OPTIONS
# Set the next two variables to ANYTHING that is not null to enable them

# Tweak kernel options prior to a build via nconfig
_makenconfig=

# Only compile select modules to reduce the number of modules built
#
# To keep track of which modules are needed for your specific system/hardware,
# give module_db a try: https://aur.archlinux.org/packages/modprobed-db
# This PKGBUILD reads the database kept if it exists
# More at this wiki page ---> https://wiki.archlinux.org/index.php/Modprobed-db
_localmodcfg=

## Choose between GCC and CLANG config (default is GCC)
if [ -z ${_compiler+x} ]; then
  _compiler=clang
fi

#  417 Hz is the TT alternative to 300 Hz. Choose 417 Hz
# if you prefer performance over latency.
_417_HZ_ticks=

# 833 Hz is the TT alternative to 1000 Hz. Choose 833 Hz
#  if you want a balance between latency and performance.
_833_HZ_ticks=

# ck recommends 1000 Hz tick and the hrtimer patches in lieu of ck1
_1000_HZ_ticks=y
 
# 1666 Hz is for very high latency bound systems. Choose 1666 Hz
# if you don't care about overall throughput or performance, but
# you care more about latency (some realtime applications) require
# low latency. The response and interactive processes with 1666 Hz
# feel much snappier.
_1666_HZ_ticks=

# Optionally select a sub architecture by number or leave blank which will
# require user interaction during the build. Note that the generic (default)
# option is 36.
#
#  1. AMD Opteron/Athlon64/Hammer/K8 (MK8)
#  2. AMD Opteron/Athlon64/Hammer/K8 with SSE3 (MK8SSE3) (NEW)
#  3. AMD 61xx/7x50/PhenomX3/X4/II/K10 (MK10) (NEW)
#  4. AMD Barcelona (MBARCELONA) (NEW)
#  5. AMD Bobcat (MBOBCAT) (NEW)
#  6. AMD Jaguar (MJAGUAR) (NEW)
#  7. AMD Bulldozer (MBULLDOZER) (NEW)
#  8. AMD Piledriver (MPILEDRIVER) (NEW)
#  9. AMD Steamroller (MSTEAMROLLER) (NEW)
#  10. AMD Excavator (MEXCAVATOR) (NEW)
#  11. AMD Zen (MZEN) (NEW)
#  12. AMD Zen 2 (MZEN2) (NEW)
#  13. AMD Zen 3 (MZEN3) (NEW)
#  14. Intel P4 / older Netburst based Xeon (MPSC)
#  15. Intel Core 2 (MCORE2)
#  16. Intel Atom (MATOM)
#  17. Intel Nehalem (MNEHALEM) (NEW)
#  18. Intel Westmere (MWESTMERE) (NEW)
#  19. Intel Silvermont (MSILVERMONT) (NEW)
#  20. Intel Goldmont (MGOLDMONT) (NEW)
#  21. Intel Goldmont Plus (MGOLDMONTPLUS) (NEW)
#  22. Intel Sandy Bridge (MSANDYBRIDGE) (NEW)
#  23. Intel Ivy Bridge (MIVYBRIDGE) (NEW)
#  24. Intel Haswell (MHASWELL) (NEW)
#  25. Intel Broadwell (MBROADWELL) (NEW)
#  26. Intel Skylake (MSKYLAKE) (NEW)
#  27. Intel Skylake X (MSKYLAKEX) (NEW)
#  28. Intel Cannon Lake (MCANNONLAKE) (NEW)
#  29. Intel Ice Lake (MICELAKE) (NEW)
#  30. Intel Cascade Lake (MCASCADELAKE) (NEW)
#  31. Intel Cooper Lake (MCOOPERLAKE) (NEW)
#  32. Intel Tiger Lake (MTIGERLAKE) (NEW)
#  33. Intel Sapphire Rapids (MSAPPHIRERAPIDS) (NEW)
#  34. Intel Rocket Lake (MROCKETLAKE) (NEW)
#  35. Intel Alder Lake (MALDERLAKE) (NEW)
#  36. Generic-x86-64 (GENERIC_CPU)
#  37. Generic-x86-64-v2 (GENERIC_CPU2) (NEW)
#  38. Generic-x86-64-v3 (GENERIC_CPU3) (NEW)
#  39. Generic-x86-64-v4 (GENERIC_CPU4) (NEW)
#  40. Intel-Native optimizations autodetected by GCC (MNATIVE_INTEL) (NEW)
#  41. AMD-Native optimizations autodetected by GCC (MNATIVE_AMD) (NEW)
_subarch=15

### IMPORTANT: Do no edit below this line unless you know what you're doing
pkgbase=linux-tt-lto
pkgver=6.1
pkgrel=1
pkgdesc='Linux TT scheduler Kernel with other patches and improvements'
arch=(x86_64)
url="https://github.com/hamadmarri/TT-CPU-Scheduler"
license=(GPL2)
makedepends=(
  bc kmod libelf cpio perl tar xz
)
if [ "${_compiler}" = "clang" ]; then
  makedepends+=(clang llvm lld python)
  BUILD_FLAGS=(
    CC=clang
    LD=ld.lld
    LLVM=1
    LLVM_IAS=1
  )
fi
options=('!strip')

# https://ck-hack.blogspot.com/2021/08/514-and-future-of-muqss-and-ck-once.html
# acknowledgment to xanmod for initially keeping the hrtimer patches up to date
#_ckhrtimer=linux-6.0.y
#_commit=5be918e798e2c2cc94fa7dd0f6f031921a4f7598

_gcc_more_v=20221104
_patchsource="https://raw.githubusercontent.com/CachyOS/kernel-patches/master/6.1"
# _patchsource="https://raw.fastgit.org/CachyOS/kernel-patches/master/6.1"
_patchsources="https://raw.githubusercontent.com/sirlucjan/kernel-patches/master/6.1"

source=(
  "https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-$pkgver.tar".{xz,sign}
  config         # the main kernel config file
  open_O3.patch
  "more-uarches-$_gcc_more_v.tar.gz::https://github.com/graysky2/kernel_compiler_patch/archive/$_gcc_more_v.tar.gz"
  # "ck-hrtimer-$_commit.tar.gz::https://github.com/graysky2/linux-patches/archive/$_commit.tar.gz"
  "${_patchsource}/sched/0001-tt.patch"
  # "${_patchsource}/misc/0001-ck-hrtimer.patch"
  "${_patchsource}/misc/0001-mm-add-zblock-new-allocator-for-use-via-zpool-API.patch"
  "${_patchsource}/0001-bbr2.patch"
  "${_patchsource}/0002-bfq.patch"
  "${_patchsource}/0005-fixes.patch"
  "${_patchsource}/0006-folio.patch"
  "${_patchsource}/0007-futex-winesync.patch"
  "${_patchsource}/0008-fs-patches.patch"
  # "${_patchsource}/0005-mm-Introduce-the-maple-tree-with-MG-LRU.patch"
  # "${_patchsource}/0006-mm-multi-gen-LRU-memcg-LRU.patch"
  # "${_patchsource}/0007-mm-demotion-Memory-tiers-and-demotion.patch"
  "${_patchsource}/0011-ksm.patch"
  "${_patchsource}/0012-lrng.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/clearlinux/0004-drivers-initialize-ata-before-graphics.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/clearlinux/0005-init-wait-for-partition-and-retry-scan.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/net/ipv4/0001-Add-a-sysctl-to-skip-tcp-collapse-processing-when-th.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0001-XANMOD-x86-build-Add-more-x86_64-optimizations.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0002-XANMOD-fair-Remove-all-energy-efficiency-functions.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0003-XANMOD-sched-core-Add-yield_type-sysctl-to-reduce-or.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0005-XANMOD-block-mq-deadline-Increase-write-priority-to-.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0007-XANMOD-block-set-rq_affinity-to-force-full-multithre.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0009-XANMOD-dcache-cache_pressure-50-decreases-the-rate-a.patch"
  # "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0011-XANMOD-sched-autogroup-Add-kernel-parameter-and-conf.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0014-XANMOD-Makefile-Disable-GCC-vectorization-on-trees.patch"
  "https://github.com/xanmod/linux-patches/raw/master/linux-6.1.y-xanmod/xanmod/0015-XANMOD-scripts-setlocalversion-remove-tag-for-git-re.patch"
)

validpgpkeys=(
  'ABAF11C65A2970B130ABE3C479BE3E4300411886'  # Linus Torvalds
  '647F28654894E3BD457199BE38DBBDC86092693E'  # Greg Kroah-Hartman
)

b2sums=('ae60257860b2bd1bd708d183f0443afc60ebbd2b3d535c45e44c2e541bd0928530a3b62de6385dd4e4726ebbedcc0a871d4f3ffb4105b9f1f6d8ed7467f5688e'
        'SKIP'
        'e806d5dfaafd36ebc7fe57219af4ccfb368a9620d4c2311461a241d2a93b22fa51ae44cde189d3d8a9e53d74a4a9ae284a23efb4b54da9e46c12f84b97c63f1c'
        'cb82ebeca7c8e3f2532b6b13c4397d865573a48f9990ce252691547858dc06848ddc8c30e7e66f9334f068435c4dd1c0dc741e99ba9f68c1704b681d00a69254'
        '05bddc2b57189d7e302f32041079bcf60a06938e9afcfd02a0085a1430255286a5b663eed7cdb7f857717c65e9e27af4d15625b17e0a36d1b4ce1cbda6baee2b'
        '4ae446a3369e2518841a0e209f263b548fb18797ebe95b1816817c40f67e8b90a2bafe5e6a70d4fc8f57b819b6de8e512923b5a6a7d2cd8feb891ebc51306c94'
        '1878a68062a4342b5c780027960f4a2f66d21da7e855d7c2e0ae8ae9cb166081e405bb80f69c1b7427c1480392cc0d9dbacc84497f800aade7fe3e16d6761ea9'
        '945df65808aaa2a22bd2295869aeb6e41e3c6ec57f59c7bccb658ef81ea1a08ee734a4168b301dd99b0f657fa6bb29fd65f33869f5428d1dbc7eaf191508b484'
        '534fabaef23687bf1a9f276d05e6f6dc39862cab668f43b6fef3707f21caaf683bf4a7994e85edfff4b6ca25318e8633232e74d6454877791e4ce74c3c4c2cce'
        '4fb6c5a7daead504d10b7ca14aa4cf0e03a6b6c007793756445658399dbed037f5032768a71e130d6ec116e9c105f022568561574ada034831e7a947e04c8f86'
        'aabe74afabeb31ef1d3eb34c53629734112493c00b9d803cf31869886e70588b32968d9608020e8cbb83b698fe2b5b8511deef5331bc03eaa495ca84f22ca959'
        '0980b749b6419e970fca460262bea1046033f9739a30e1ec44e9653ad203d3a6e84e2453a9d2368f7759b738d3828d8ac2ea58b900917040273fe1a143669514'
        'fa0500ac3a0f3bb2c8a570d6703c19b428a48e14b66084743142dc3956b4b44df683bb26d3c5e136a754af70e2592836088d2117fe3ff639f7bcca9ba98291ea'
        'ee531f2685e2809286340f07b6244fb4731608a6695b3cfcb9f348ff83f234356fd41e465defaacf76e6c533f0cb449ef6e6129694701b7e3e1b47dac372996c'
        '16b9b01cab42f4615688d0cd016c1f2d4ba1f3e2c024324e04aa43c0dc4f2889223ac32c3c72246a36ec483f2c68348b583b3287868e07de84b7b9ac38452503'
        '2118a7820ebc64a8a2edc14c41ce941b335ebb551fc9ae9ab9c3d775c511a99abdd68e2477528f0e8b525fb8d67c4023573400899b022743db5b7de99e7e0027'
        'fa28d3f0759080bb4c1e3dc8901559dd9697791cb92834e002f5e857ae4aa67b871716511d45379eb3fd0543f9d17bf0ebcd97c7cf25f1d5084d262561b00417'
        '67f41ae57ffe48a191b4baf8b7ea68f42f862060e6debd1075b0497fc05e896140bb643c8147f40a9020820187b38f8c7d9fbaded11fbdd9e95d0d2b5d4cb350'
        '5ef3b991a631a516948e83870e43f1876318bf80958fd94c6f3b923e25ea7e94961123657aa2f28d56e46e823eeaf000a8208875fd2f9fba0f82a9ed001cc384'
        '12448f2a27f4448a85bb2ec3e353b7a1a22c779df9f50bf8f1d5fb8d77306eebfda5de4b779baef6df174190ce6a6530d613f82a4ad8edfc2463c38d3930e5f3'
        '6e596f67dfb43b39d03424d49c12637deba8786ca408c9f34fe030e42dbb618d066f7512cdc8f24374fa01f360dbd49c6694b084e1a054c4283e7084a7cc2a07'
        '5ee267759d3f315d174fd71cc13d58d41e52dcdc4b0167188692e911b1d7b7b0decde89569d1cf3b88240144ed357f5e8cfab0215906fbe7760bbd39ac3c341d')

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

prepare() {
  cd linux-${pkgver}

  msg2 "Preparing rust which not depend on llvm 14.x.x"
  curl https://sh.rustup.rs -sSf > installer.sh
  bash installer.sh -y
  source "$HOME/.cargo/env"

  msg2 "Setting version..."
  scripts/setlocalversion --save-scmversion
  echo "-$pkgrel" > localversion.10-pkgrel
  echo "${pkgbase#linux}" > localversion.20-pkgname

  sed -i '/select DEBUG_KERNEL/d' init/Kconfig
  sed -i '/depends\ on\ HAVE_KERNEL_UNCOMPRESSED/d' init/Kconfig
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    msg2 "Applying patch $src..."
    patch -Np1 < "../$src"
  done

  msg2 "Setting config..."
  cp ../config .config

  # clang Full LTO
  if [ "${_compiler}" = "clang" ]; then
    msg2 "Enable FULL LTO"
    scripts/config \
            --enable LTO \
            --enable LTO_CLANG \
            --enable ARCH_SUPPORTS_LTO_CLANG \
            --enable ARCH_SUPPORTS_LTO_CLANG_THIN \
            --disable LTO_NONE \
            --enable HAS_LTO_CLANG \
            --enable LTO_CLANG_FULL \
            --disable LTO_CLANG_THIN
  fi

  scripts/config --enable CONFIG_CGROUPS
  scripts/config --enable CONFIG_RT_GROUP_SCHED

  # disable CONFIG_DEBUG_INFO=y at build time otherwise memory usage blows up
  # and can easily overwhelm a system with 32 GB of memory using a tmpfs build
  # partition ... this was introduced by FS#66260, see:
  # https://git.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/linux&id=663b08666b269eeeeaafbafaee07fd03389ac8d7
  scripts/config --disable CONFIG_DEBUG_INFO
  scripts/config --disable CONFIG_DEBUG_KERNEL
  scripts/config --disable CONFIG_CGROUP_BPF
  scripts/config --disable CONFIG_BPF_LSM
  scripts/config --disable CONFIG_BPF_PRELOAD
  scripts/config --disable CONFIG_BPF_LIRC_MODE2
  scripts/config --disable CONFIG_BPF_KPROBE_OVERRIDE

  # https://bbs.archlinux.org/viewtopic.php?pid=1824594#p1824594
  scripts/config --enable CONFIG_PSI_DEFAULT_DISABLED

  # https://bbs.archlinux.org/viewtopic.php?pid=1863567#p1863567
  scripts/config --disable CONFIG_LATENCYTOP
  scripts/config --disable CONFIG_SCHED_DEBUG

  # FS#66613
  # https://bugzilla.kernel.org/show_bug.cgi?id=207173#c6
  scripts/config --disable CONFIG_KVM_WERROR
  scripts/config --enable CONFIG_KVM
  scripts/config --enable CONFIG_KVM_INTEL
  scripts/config --disable CONFIG_KVM_AMD

 
  msg2 "Enable O3"
  scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_SIZE
  scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3 

  msg2 "Enabling Linux Random Number Generator ..."
  scripts/config --disable CONFIG_RANDOM_DEFAULT_IMPL
  scripts/config --enable CONFIG_LRNG
  scripts/config --enable CONFIG_LRNG_SHA256
  scripts/config --enable CONFIG_LRNG_COMMON_DEV_IF
  scripts/config --enable CONFIG_LRNG_DRNG_ATOMIC
  scripts/config --enable CONFIG_LRNG_SYSCTL
  scripts/config --enable CONFIG_LRNG_RANDOM_IF
  scripts/config --module CONFIG_LRNG_KCAPI_IF
  scripts/config --module CONFIG_LRNG_HWRAND_IF
  scripts/config --enable CONFIG_LRNG_DEV_IF
  scripts/config --enable CONFIG_LRNG_RUNTIME_ES_CONFIG
  scripts/config --enable CONFIG_LRNG_IRQ_DFLT_TIMER_ES
  scripts/config --disable CONFIG_LRNG_SCHED_DFLT_TIMER_ES
  scripts/config --enable CONFIG_LRNG_TIMER_COMMON
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_256
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_512
  scripts/config --enable CONFIG_LRNG_COLLECTION_SIZE_1024
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_2048
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_4096
  scripts/config --disable CONFIG_LRNG_COLLECTION_SIZE_8192
  scripts/config --set-val CONFIG_LRNG_COLLECTION_SIZE 1024
  scripts/config --enable CONFIG_LRNG_HEALTH_TESTS
  scripts/config --set-val CONFIG_LRNG_RCT_CUTOFF 31
  scripts/config --set-val CONFIG_LRNG_APT_CUTOFF 325
  scripts/config --enable CONFIG_LRNG_IRQ
  scripts/config --enable CONFIG_LRNG_CONTINUOUS_COMPRESSION_ENABLED
  scripts/config --disable CONFIG_LRNG_CONTINUOUS_COMPRESSION_DISABLED
  scripts/config --enable CONFIG_LRNG_ENABLE_CONTINUOUS_COMPRESSION
  scripts/config --enable CONFIG_LRNG_SWITCHABLE_CONTINUOUS_COMPRESSION
  scripts/config --set-val CONFIG_LRNG_IRQ_ENTROPY_RATE 256
  scripts/config --enable CONFIG_LRNG_JENT
  scripts/config --set-val CONFIG_LRNG_JENT_ENTROPY_RATE 16
  scripts/config --enable CONFIG_LRNG_CPU
  scripts/config --set-val CONFIG_LRNG_CPU_FULL_ENT_MULTIPLIER 1
  scripts/config --set-val CONFIG_LRNG_CPU_ENTROPY_RATE 8
  scripts/config --enable CONFIG_LRNG_SCHED
  scripts/config --set-val CONFIG_LRNG_SCHED_ENTROPY_RATE 4294967295
  scripts/config --enable CONFIG_LRNG_DRNG_CHACHA20
  scripts/config --module CONFIG_LRNG_DRBG
  scripts/config --module CONFIG_LRNG_DRNG_KCAPI
  scripts/config --enable CONFIG_LRNG_SWITCH
  scripts/config --enable CONFIG_LRNG_SWITCH_HASH
  scripts/config --module CONFIG_LRNG_HASH_KCAPI
  scripts/config --enable CONFIG_LRNG_SWITCH_DRNG
  scripts/config --module CONFIG_LRNG_SWITCH_DRBG
  scripts/config --module CONFIG_LRNG_SWITCH_DRNG_KCAPI
  scripts/config --enable CONFIG_LRNG_DFLT_DRNG_CHACHA20
  scripts/config --disable CONFIG_LRNG_DFLT_DRNG_DRBG
  scripts/config --disable CONFIG_LRNG_DFLT_DRNG_KCAPI
  scripts/config --enable CONFIG_LRNG_TESTING_MENU
  scripts/config --disable CONFIG_LRNG_RAW_HIRES_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_JIFFIES_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_IRQ_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_RETIP_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_REGS_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_ARRAY
  scripts/config --disable CONFIG_LRNG_IRQ_PERF
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_HIRES_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_PID_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_START_TIME_ENTROPY
  scripts/config --disable CONFIG_LRNG_RAW_SCHED_NVCSW_ENTROPY
  scripts/config --disable CONFIG_LRNG_SCHED_PERF
  scripts/config --disable CONFIG_LRNG_ACVT_HASH
  scripts/config --disable CONFIG_LRNG_RUNTIME_MAX_WO_RESEED_CONFIG
  scripts/config --disable CONFIG_LRNG_TEST_CPU_ES_COMPRESSION
  scripts/config --enable CONFIG_LRNG_SELFTEST
  scripts/config --disable CONFIG_LRNG_SELFTEST_PANIC

  msg2 "Selecting TT Scheduler..."
  scripts/config --enable TT_SCHED
  scripts/config --disable TT_ACCOUNTING_STATS

  ### Optionally set tickrate 
  if [ -n "$_417_HZ_ticks" ]; then
    msg2 "Setting tick rate to 417Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_417
    scripts/config --set-val CONFIG_HZ 417
  fi 
  
  if [ -n "$_833_HZ_ticks" ]; then
    msg2 "Setting tick rate to 833Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_833
    scripts/config --set-val CONFIG_HZ 833
  fi

  if [ -n "$_1000_HZ_ticks" ]; then
    msg2 "Setting tick rate to 1000Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_1000
    scripts/config --set-val CONFIG_HZ 1000
  fi

  if [ -n "$_1666_HZ_ticks" ]; then
    msg2 "Setting tick rate to 1666Hz..."
    scripts/config --disable CONFIG_HZ_300
    scripts/config --enable CONFIG_HZ_1666
    scripts/config --set-val CONFIG_HZ 1666
  fi

  # BBR2
  msg2 "Enable BBR2"
  scripts/config --module TCP_CONG_CUBIC \
                 --disable DEFAULT_CUBIC \
                 --enable TCP_CONG_BBR2 \
                 --enable DEFAULT_BBR2 \
                 --set-str DEFAULT_TCP_CONG bbr2
  
  msg2 "Disabling NUMA"
  scripts/config --disable NUMA \
                 --disable AMD_NUMA \
                 --disable X86_64_ACPI_NUMA \
                 --disable NODES_SPAN_OTHER_NODES \
                 --disable NUMA_EMU \
                 --disable NEED_MULTIPLE_NODES \
                 --disable USE_PERCPU_NUMA_NODE_ID \
                 --disable ACPI_NUMA \
                 --disable ARCH_SUPPORTS_NUMA_BALANCING \
                 --disable NODES_SHIFT \
                 --undefine NODES_SHIFT \
                 --disable NEED_MULTIPLE_NODES

  msg2 "Enable zswap compression to LZ4"
  scripts/config --enable CONFIG_ZSMALLOC
  scripts/config --disable CONFIG_ZRAM
  scripts/config --enable CONFIG_ZSWAP
  scripts/config --enable CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZ4
  scripts/config --enable CONFIG_ZSWAP_ZPOOL_DEFAULT_ZSMALLOC
  scripts/config --set-str CONFIG_ZSWAP_ZPOOL_DEFAULT zsmalloc
  scripts/config --set-str CONFIG_ZSWAP_COMPRESSOR_DEFAULT lz4
  scripts/config --disable CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZO
  scripts/config --disable CONFIG_ZSWAP_ZPOOL_DEFAULT_ZBUD
  scripts/config --enable CONFIG_ZSWAP_DEFAULT_ON

  msg2 "Setting performance governor..."
  scripts/config --enable CONFIG_CPU_FREQ_GOV_ONDEMAND
  scripts/config --enable CONFIG_CPU_FREQ_GOV_PERFORMANCE
  scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
  scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE

  msg2 "Enabling tickless idle"
  scripts/config --disable HZ_PERIODIC \
                 --disable NO_HZ_IDLE \
                 --disable CONTEXT_TRACKING_FORCE \
                 --enable NO_HZ_FULL_NODEF \
                 --enable NO_HZ_FULL \
                 --enable NO_HZ \
                 --enable NO_HZ_COMMON \
                 --enable CONTEXT_TRACKING

  msg2 "Enabling low latency preempt..."
  scripts/config --enable PREEMPT_BUILD \
                 --disable PREEMPT_NONE \
                 --disable PREEMPT_VOLUNTARY \
                 --enable PREEMPT \
                 --enable PREEMPT_COUNT \
                 --enable PREEMPTION \
                 --enable PREEMPT_DYNAMIC
    
  msg2 "Enabling multigenerational LRU..."
  scripts/config --enable ARCH_HAS_NONLEAF_PMD_YOUNG \
                 --enable LRU_GEN \
                 --enable LRU_GEN_ENABLED \
                 --disable LRU_GEN_STATS \
                 --set-val NR_LRU_GENS 7 \
                 --set-val TIERS_PER_GEN 4

  # msg2 "Enabling DAMON"
  # scripts/config --enable DAMON \
  #                --disable DAMON_VADDR \
  #                --disable DAMON_DBGFS \
  #                --enable DAMON_SYSFS \
  #                --enable DAMON_PADDR \
  #                --enable DAMON_RECLAIM

  msg2 "disable debugging features to reduce the size..."
  scripts/config --disable DEBUG_INFO \
                 --disable DEBUG_INFO_BTF \
                 --disable DEBUG_INFO_DWARF4 \
                 --disable DEBUG_INFO_DWARF5 \
                 --disable PAHOLE_HAS_SPLIT_BTF \
                 --disable DEBUG_INFO_BTF_MODULES \
                 --disable SLUB_DEBUG \
                 --disable PM_DEBUG \
                 --disable PM_ADVANCED_DEBUG \
                 --disable PM_SLEEP_DEBUG \
                 --disable ACPI_DEBUG \
                 --disable SCHED_DEBUG \
                 --disable LATENCYTOP \
                 --disable DEBUG_PREEMPT

  # msg2 "Enable ZRAM_ENTROPY"
  # scripts/config --enable ZRAM_ENTROPY \
  #                --set-val ZRAM_ENTROPY_THRESHOLD 100000

  # these are ck's htrimer patches
  # msg2 "Patching with ck hrtimer patches..."

  # for i in ../linux-patches-"$_commit"/"$_ckhrtimer"/ck-hrtimer/0*.patch; do
  #   patch -Np1 -i $i
  # done

  # non-interactively apply ck1 default options
  # this isn't redundant if we want a clean selection of subarch below
  make ${BUILD_FLAGS[*]} olddefconfig
  diff -u ../config .config || :

  # https://github.com/graysky2/kernel_gcc_patch
  # make sure to apply after olddefconfig to allow the next section
  msg2 "Patching to enable GCC optimization for other uarchs..."
  patch -Np1 -i "$srcdir/kernel_compiler_patch-$_gcc_more_v/more-uarches-for-kernel-5.17+.patch"

  if [ -n "$_subarch" ]; then
    # user wants a subarch so apply choice defined above interactively via 'yes'
    yes "$_subarch" | make ${BUILD_FLAGS[*]} oldconfig
  else
    # no subarch defined so allow user to pick one
    make ${BUILD_FLAGS[*]} oldconfig
  fi

  ### Optionally load needed modules for the make localmodconfig
  # See https://aur.archlinux.org/packages/modprobed-db
  if [ -n "$_localmodcfg" ]; then
    if [ -f $HOME/.config/modprobed.db ]; then
      msg2 "Running Steven Rostedt's make localmodconfig now"
      make ${BUILD_FLAGS[*]} LSMOD=$HOME/.config/modprobed.db localmodconfig
    else
      msg2 "No modprobed.db data found"
      exit
    fi
  fi

  make ${BUILD_FLAGS[*]} -s kernelrelease > version
  echo "Prepared $pkgbase version $(<version)"

  [[ -z "$_makenconfig" ]] || make ${BUILD_FLAGS[*]} nconfig

  # save configuration for later reuse
  cat .config > "${startdir}/config.last"
}

build() {
  cd linux-${pkgver}
  make ${BUILD_FLAGS[*]} all
}

_package() {
  pkgdesc="The ${pkgbase/linux/Linux} kernel and modules with Con Kolivas' hrtimer patches and TT CPU scheduler by Hamad Al Marri and with some other patches"
  depends=(coreutils kmod initramfs)
  optdepends=('crda: to set the correct wireless channels of your country'
              'linux-firmware: firmware images needed for some devices')
  provides=(kvm winesync)
  # groups=('tt-uksm')

  cd linux-${pkgver}

  local kernver="$(<version)"
  local modulesdir="$pkgdir/usr/lib/modules/$kernver"

  echo "Installing boot image..."
  # systemd expects to find the kernel here to allow hibernation
  # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
  #install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"
  #
  # hard-coded path in case user defined CC=xxx for build which causes errors
  # see this FS https://bugs.archlinux.org/task/64315
  install -Dm644 arch/x86/boot/bzImage "$modulesdir/vmlinuz"

  # Used by mkinitcpio to name the kernel
  echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

  echo "Installing modules..."
  #make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 modules_install
  # not needed since not building with CONFIG_DEBUG_INFO=y

  make LLVM=$_LLVM LLVM_IAS=$_LLVM INSTALL_MOD_PATH="$pkgdir/usr" modules_install

  # remove build and source links
  rm "$modulesdir"/{source,build}
}

_package-headers() {
  pkgdesc="Headers and scripts for building modules for ${pkgbase/linux/Linux} kernel"
  depends=("$pkgbase") # added to keep kernel and headers packages matched
  # groups=('tt-uksm')

  cd linux-${pkgver}
  local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

  echo "Installing build files..."
  install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
    localversion.* version vmlinux
  install -Dt "$builddir/kernel" -m644 kernel/Makefile
  install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
  cp -t "$builddir" -a scripts

  # add objtool for external module building and enabled VALIDATION_STACK option
  install -Dt "$builddir/tools/objtool" tools/objtool/objtool

  # add xfs and shmem for aufs building
  mkdir -p "$builddir"/{fs/xfs,mm}

  echo "Installing headers..."
  cp -t "$builddir" -a include
  cp -t "$builddir/arch/x86" -a arch/x86/include
  install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

  install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
  install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

  # https://bugs.archlinux.org/task/13146
  install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # https://bugs.archlinux.org/task/20402
  install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  # https://bugs.archlinux.org/task/71392
  install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

  echo "Installing KConfig files..."
  find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

  echo "Removing unneeded architectures..."
  local arch
  for arch in "$builddir"/arch/*/; do
    [[ $arch = */x86/ ]] && continue
    echo "Removing $(basename "$arch")"
    rm -r "$arch"
  done

  echo "Removing documentation..."
  rm -r "$builddir/Documentation"

  echo "Removing broken symlinks..."
  find -L "$builddir" -type l -printf 'Removing %P\n' -delete

  echo "Removing loose objects..."
  find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

  echo "Stripping build tools..."
  local file
  while read -rd '' file; do
    case "$(file -bi "$file")" in
      application/x-sharedlib\;*)      # Libraries (.so)
        strip -v $STRIP_SHARED "$file" ;;
      application/x-archive\;*)        # Libraries (.a)
        strip -v $STRIP_STATIC "$file" ;;
      application/x-executable\;*)     # Binaries
        strip -v $STRIP_BINARIES "$file" ;;
      application/x-pie-executable\;*) # Relocatable binaries
        strip -v $STRIP_SHARED "$file" ;;
    esac
  done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

  #echo "Stripping vmlinux..."
  #strip -v $STRIP_STATIC "$builddir/vmlinux"
  # not needed since not building with CONFIG_DEBUG_INFO=y

  echo "Adding symlink..."
  mkdir -p "$pkgdir/usr/src"
  ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"

}

pkgname=("$pkgbase" "$pkgbase-headers")
for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done

# vim:set ts=8 sts=2 sw=2 et:
