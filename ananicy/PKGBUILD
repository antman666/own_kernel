# Maintainer: dr460nf1r3 <dr460nf1r3 at garudalinux dot org>
# Maintainer: Antoine Viallon <antoine@lesviallon.fr>

_pkgname=ananicy-cpp
pkgname=ananicy-cpp-git
pkgver=1.0.2.r33.g0bb695f
pkgrel=1
pkgdesc="Ananicy Cpp is a full rewrite of Ananicy in C++, featuring lower CPU and RAM usage."
arch=(x86_64 i386 armv7h)
url="https://gitlab.com/ananicy-cpp/ananicy-cpp.git"
license=('GPLv3')
depends=(fmt spdlog nlohmann-json systemd libelf zlib libbpf)
makedepends=(cmake ninja clang git nlohmann-json bpf)
optdepends=("ananicy-rules-git: community rules"
            "ananicy-rules: Rules based for ananicy-cpp")
source=("${_pkgname}::git+https://gitlab.com/ananicy-cpp/ananicy-cpp.git"
        "git+https://gitlab.com/vnepogodin/std-format.git")
sha512sums=('SKIP'
            'SKIP')
provides=('ananicy-cpp')
conflicts=('ananicy-cpp')

pkgver() {
  cd "${srcdir}/${_pkgname}"

  git describe --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "${_pkgname}"
  #patch -Np1 < ../patch.patch
  git submodule init
  git config submodule."external/std-format".url "${srcdir}/std-format"
  git -c protocol.file.allow=always submodule update
}

build() {
  cd "${srcdir}/${_pkgname}"

  #_cpuCount=$(grep -c -w ^processor /proc/cpuinfo)
  _cpuCount=2

  export CFLAGS=${CFLAGS/-fgraphite-identity/}
  export CFLAGS=${CFLAGS/-floop-nest-optimize/}
  export CFLAGS=${CFLAGS/-ftree-loop-distribution/}
  export CFLAGS=${CFLAGS/-fipa-pta/}
  export CXXFLAGS=${CXXFLAGS/-fgraphite-identity/}
  export CXXFLAGS=${CXXFLAGS/-floop-nest-optimize/}
  export CXXFLAGS=${CXXFLAGS/-ftree-loop-distribution/}
  export CXXFLAGS=${CXXFLAGS/-fipa-pta/}
  export LDFLAGS="${LDFLAGS}"

  ## Default
  ./configure.sh --buildtype=Release --builddir="build" --prefix=/usr --use_clang --enable_relocs --use_bpf_proc
  ./build.sh
  ## PGO

  ## BOLT
  #./pgo-bolt.sh --builddir="build" --prefix=/usr --use_bpf_proc
  #mv ./bolt-binary/ananicy-cpp.bolt build/ananicy-cpp

  cmake -S . -B build \
             -G Ninja \
             -D CMAKE_BUILD_TYPE=Release \
             -D CMAKE_INSTALL_PREFIX=/usr \
	     -D USE_EXTERNAL_JSON=OFF \
	     -D USE_EXTERNAL_FMTLIB=OFF \
             -D ENABLE_SYSTEMD=ON \
             -D USE_EXPERIMENTAL_IMPL=ON \
             -D USE_BPF_PROC_IMPL=ON \
             -D BPF_BUILD_LIBBPF=OFF \
             -D CMAKE_C_FLAGS=-Wno-error \
             -D ENABLE_IPO=ON

  cmake --build build --target ananicy-cpp --parallel $_cpuCount
}

package() {
  cd "${srcdir}/${_pkgname}"
  DESTDIR="${pkgdir}" cmake --install build --component Runtime

  install -m755 -d "${pkgdir}/etc/ananicy.d"
}

# vim:set sw=2 sts=2 et:
